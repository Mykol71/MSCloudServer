#!/usr/bin/bash

# verify root
ID=$(/usr/bin/id -u)
[ $ID -ne 0 ] && echo "You must be root to run $0." && exit 1

ROOTDIR="$(pwd)"
export ROOTDIR

trap '' 2
while :; do
	clear
    LGGRN='\033[1;32m'
    BLUE='\033[1;34m'
    GREY='\033[0;37m'
    CYAN='\033[1;36m'
    NC='\033[0m'
    clear
echo -e "${BLUE} $(date +'%x%l:%M %p')${NC}"
printf '\u250f''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\n'
echo -e "\u2503ðŸŒ·${GREY} POS Cloud Menu ${NC}"
printf '\u2523''\u2501''\n'
echo -e "\u2503${CYAN} `[ -f .envtype ] && cat .envtype || echo -e Not Installed`${NC}"
echo -e "\u2503${GREY} Status: ${NC}"
printf '\u2503''\n'
printf '\u2503''\033[1m'" 1.\033[0m Server Status"'\n'
printf '\u2503''\033[1m'" 2.\033[0m Start Server"'\n'
printf '\u2503''\033[1m'" 3.\033[0m Stop Server(s)"'\n'
printf '\u2503''\033[1m'" 4.\033[0m Connect to Server"'\n'
printf '\u2503''\033[1m'" 5.\033[0m Restore Florist Data"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'" 11.\033[0m List Images"'\n'
printf '\u2503''\033[1m'" 12.\033[0m Build OS Media"'\n'
printf '\u2503''\033[1m'" 13.\033[0m Stage a Server"'\n'
printf '\u2503''\033[1m'" 14.\033[0m Delete Image(s)"'\n'
printf '\u2503''\033[1m'" 15.\033[0m Server Snapshot"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'" 111.\033[0m VPN Status"'\n'
printf '\u2503''\033[1m'" 112.\033[0m Create VPN"'\n'
printf '\u2503''\033[1m'" 113.\033[0m Start VPN(s)"'\n'
printf '\u2503''\033[1m'" 114.\033[0m Stop VPN(s)"'\n'
printf '\u2503''\033[1m'" 115.\033[0m Delete VPN(s)"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'" p.\033[0m Purge All"'\n'
printf '\u2503''\033[1m'" d.\033[0m I/C/U Deps"'\n'
printf '\u2503''\033[1m'" i.\033[0m Info"'\n'
printf '\u2503''\033[1m'" x.\033[0m Exit"'\n'
printf '\u2517''\u2501''\n'
	echo -ne "${CYAN}Enter selection: ${NC}"
	read selection
	case $selection in
	1)
		cd $ROOTDIR/bin
		./container_status
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	2)
		cd $ROOTDIR/bin
		./launch_container
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	3)
		cd $ROOTDIR/bin
		./stop_container
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	4)
		cd $ROOTDIR/bin
		./container_connect
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	5)
		cd $ROOTDIR/bin
		./list_nics
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	p)
		cd $ROOTDIR/bin
		./prune-docker
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	12)
		cd $ROOTDIR/bin
		time ./create-base-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	13)
		cd $ROOTDIR/bin
		time ./stage-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	11)
		cd $ROOTDIR/bin
		./list_image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	14)
		cd $ROOTDIR/bin
		./wipe_images
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	15)
		cd $ROOTDIR/bin
		time ./snapshot_instance
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	111)
		cd $ROOTDIR/bin
		CONTAINER=`cat .container`
		./cp_to_container
		docker exec $CONTAINER /usr2/vpn/list_vpns
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	112)
		cd $ROOTDIR/bin
		export CONTAINER=`cat .container`
		./cp_to_container
		docker exec $CONTAINER /usr2/vpn/create_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	113)
		cd $ROOTDIR/bin
		CONTAINER=`cat .container`
		./cp_to_container
		docker exec $CONTAINER /usr2/vpn/start_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	114)
		cd $ROOTDIR/bin
		CONTAINER=`cat .container`
		./cp_to_container
		docker exec $CONTAINER /usr2/vpn/stop_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	115)
		cd $ROOTDIR/bin
		CONTAINER=`cat .container`
		./cp_to_container
		docker exec $CONTAINER /usr2/vpn/delete_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	d)
		cd $ROOTDIR/bin
		echo -e "${CYAN}"
		time ./install
		echo -ne "Press enter to continue..${NC}"
		read
		cd -
		;;
	i)
		cat ./README.md | more
		;;
	x) exit ;;
	*) ;;
	esac
done
