#!/usr/bin/bash

TFCLOUD_VERSION="2.4"

ROOTDIR="$(pwd)"
export ROOTDIR

SHOPCODE="None"

[ -f ./bin/.container ] && CONTAINER=`cat ./bin/.container`
[ -f ./bin/.posip ] && POSIP=`cat ./bin/.posip`

trap '' 2
while :; do
	clear
    LGGRN='\033[1;32m'                                                                                                                                                                                            
    BLUE='\033[1;34m'                                                                                                                                                                                              
    GREY='\033[0;37m'                                                                                                                                                                                             
    CYAN=''                                                                                                                                                                                             
    NC='\033[0m'                                                                                                                                                                                                  
    clear                                                                                                                                                                                                         
    [ -f ./bin/.shopcode ] && SHOPCODE=`cat ./bin/.shopcode`
    echo -e "${GREY}$(date +'%x %l:%M %p')${NC}"
    printf '\u250f''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\u2501''\n'
    echo -e "\u2503${BLUE} @ ${NC}`[ -f ../.envtype ] && cat ../.envtype || echo -e Not Installed`${NC}"
    printf '\u2503'${LGGRN}' )~ Containers'${NC}'\n'
    printf '\u2503''\u2501''\n'
    printf '\u2503'${GREY}" Space    : $(df -h /backups | tail -1 | awk '{print $4}')${NC}"'\n'
    echo -e "\u2503${GREY} Status   : `podman ps | grep $SHOPCODE | wc -l 2>/dev/null` running${NC}"
    echo -e "\u2503${GREY} Shopcode : `[ -f ./bin/.shopcode ] && cat ./bin/.shopcode`${NC}"
    printf '\u2503'${GREY}" Backups  : `[ -f ./bin/.shopcode ] && ls /backups | grep $(cat ./bin/.shopcode) | wc -l`${NC}"'\n'
[ "`netstat -an | grep 8080`" != "" ] && echo -e "\u2503${BLUE} http://$(cat ./bin/.posip):8080/ ${NC}" || echo -e "\u2503${BLUE}${NC}"
#    [ -f ./bin/.container ] && echo -e "\u2503${GREY} IP       : ${BLUE}${POSIP}${NC}" || echo -e "\u2503${GREY} IP       :${NC}"
#    [ -f ./bin/.container ] && echo -e "\u2503${GREY} VPN      :`podman exec $(cat ./bin/.container) ipsec briefstatus | grep -v Assoc | cut -d: -f1 | sed -e 's/\ \ \ \ \ \ //' | head -1`${NC}" || echo -e "\u2503${GREY} VPN      :${NC}"
#printf '\u2503''\n'
printf '\u2503''\033[1m'"---\033[0m Containers"'\n'
printf '\u2503''\033[1m'" 1.\033[0m Status"'\n'
printf '\u2503''\033[1m'" 2.\033[0m Start"'\n'
printf '\u2503''\033[1m'" 3.\033[0m Stop"'\n'
printf '\u2503''\033[1m'" 4.\033[0m Connect"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"----\033[0m VPNs"'\n'
printf '\u2503''\033[1m'" 11.\033[0m Status"'\n'
printf '\u2503''\033[1m'" 12.\033[0m Start"'\n'
printf '\u2503''\033[1m'" 13.\033[0m Stop"'\n'
printf '\u2503''\033[1m'" 14.\033[0m Create"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"-----\033[0m Images"'\n'
printf '\u2503''\033[1m'" 111.\033[0m List"'\n'
printf '\u2503''\033[1m'" 112.\033[0m Build"'\n'
printf '\u2503''\033[1m'" 113.\033[0m Delete"'\n'
printf '\u2503''\n'
printf '\u2503''\033[1m'"---\033[0m System"'\n'
printf '\u2503''\033[1m'" s.\033[0m Shopcode"'\n'
printf '\u2503''\033[1m'" i.\033[0m Install"'\n'
printf '\u2503''\033[1m'" p.\033[0m Purge"'\n'
printf '\u2503''\033[1m'" r.\033[0m Readme"'\n'
printf '\u2503''\033[1m'" x.\033[0m Exit"'\n'
printf '\u2517''\u2501''\n'
	echo -ne "Enter selection: ${NC}"
	read selection
	case $selection in
	1)
		cd $ROOTDIR/bin
		./container_status
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	2)
		cd $ROOTDIR/bin
		time ./stage-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	3)
		cd $ROOTDIR/bin
		./stop_container
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	4)
		cd $ROOTDIR/bin
		./container_connect
		echo -ne "${CYAN}Press enter to continue..${NC}"
                read
		cd -
		;;
	112)
		cd $ROOTDIR/bin
		time ./create-image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	111)
		cd $ROOTDIR/bin
		./list_image
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	113)
		cd $ROOTDIR/bin
		./wipe_images
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	11)
		cd $ROOTDIR/bin
		./list_vpns
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	14)
		cd $ROOTDIR/bin
		./create_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	12)
		cd $ROOTDIR/bin
		./start_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	13)
		cd $ROOTDIR/bin
		./stop_vpn
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	s)
		cd $ROOTDIR/bin
		./set_working_shopcode
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	i)
		cd $ROOTDIR/bin
		./install
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	p)
		cd $ROOTDIR/bin
		./prune-docker
		CONTAINER=`cat ./bin/.container 2>/dev/null`
		echo -ne "${CYAN}Press enter to continue..${NC}"
		read
		cd -
		;;
	r)
		cat ./README.md | more
		echo -ne "Press enter to continue..${NC}"
		read
		;;
	x) exit ;;
	*) ;;
	esac
done
