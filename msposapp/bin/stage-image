#!/bin/bash

OS=centos
echo -n "daisy or rti?: "
read POSTYPE
[ "$POSTYPE" == "daisy" ] && VER="10.1.17" && POSDIR="d"
[ "$POSTYPE" == "rti" ] && VER="16.1.3" && POSDIR="usr2"
POSIP=`cat .posip`
SHOPCODE=`cat .shopcode`

#start container
CONTAINER=`docker run -d -it --name=$SHOPCODE.teleflora.com --rm --privileged -v "${POSDIR}:/${POSDIR}"  -w="/usr/local/bin" -i ${OS}7-${POSTYPE}-${VER} /usr/sbin/init`
echo $CONTAINER>.container

#configure the second nic for host networking by passing eth1 through to the container
./pipework --direct-phys eth1 $CONTAINER ${POSIP}/24@192.168.222.1
POSIP=`docker exec $CONTAINER /usr/sbin/ifconfig eth1 | grep broad | sed -e 's/    //g' | cut -d ' ' -f2`
echo "$POSIP" > .posip

#RHEL changed from /bin to /usr/bin at some point. Created link to avoid changing scripts.
docker exec $CONTAINER ln -s /usr/bin /bin

#Make loop back device in container so we can mount isos inside the container
docker exec $CONTAINER mknod /dev/loop b 7 0

#install ostools
docker exec $CONTAINER wget http://rtihardware.homelinux.com/ostools/ostools-1.15-latest.tar.gz
docker exec $CONTAINER tar xvfz ostools-1.15-latest.tar.gz
docker exec $CONTAINER ./bin/install-ostools.pl --noharden-linux ./ostools-1.15-latest.tar.gz

#configure system with ostools
docker exec $CONTAINER ./bin/updateos.pl --hostname=$SHOPCODE.teleflora.com >/dev/null 2>&1

#install vpn software
docker exec $CONTAINER wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
docker exec $CONTAINER yum -y localinstall ./epel-release-latest-7.noarch.rpm
docker exec $CONTAINER yum -y install strongswan strongswan-libipsec
docker exec $CONTAIENR yum -y install Network-Manager

#create main store vpn if desired
echo -n "Create Primary VPN for this POS? (y/n): "
read PRIMARY_VPN
[ "$PRIMARY_VPN" == "y" ] && ./create_mainstore_vpn && docker exec $CONTAINER strongswan start

#update OS
docker exec $CONTAINER yum -y update

#save/export container
docker commit $CONTAINER $SHOPCODE.teleflora.com

#Done
echo "---"
echo "${OS}7-$POSTYPE-$SHOPCODE instance is ready!"
echo "---"
docker exec $CONTAINER /usr/local/bin/bin/updateos.pl --version
docker exec $CONTAINER cat /etc/redhat-release
rm -f ~/.ssh/known_hosts
echo "---"
exit 0
