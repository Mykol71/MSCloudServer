#!/usr/bin/bash

#Install check
[ ! -f .shopcode ] && echo "Not installed." && exit 0
SHOPCODE="`cat .shopcode`"

OS="$1"
[ -f .$SHOPCODE.osversion ] && OS="`cat .$SHOPCODE.osversion`"

#already built check
[ "`podman image ls | grep $OS-rti`" != "" ] && echo "Image already built." && exit 0

KSNAME=$OS-rti
BUILDDATE=$(date +%Y%m%d)
BUILDROOT=/var/tmp/containers/$BUILDDATE/$KSNAME

POSTYPE=rti

rm -f /var/tmp/$OS*xz

[ ! -d /var/tmp/containers ] && mkdir /var/tmp/containers
[ ! -d /var/tmp/containers/$BUILDDATE ] && mkdir /var/tmp/containers/$BUILDDATE
[ ! -d /var/tmp/containers/$BUILDDATE/$KSNAME ] && mkdir /var/tmp/containers/$BUILDDATE/$KSNAME
[ ! -d /var/tmp/containers/$BUILDDATE/$KSNAME/docker ] && mkdir /var/tmp/containers/$BUILDDATE/$KSNAME/docker

if [ "$POSTYPE" == "rti" ]; then
livemedia-creator --no-virt --make-tar --ks=./$KSNAME.ks --image-name=$OS-rti-docker.tar.xz --logfile=/tmp/build-rti-container.error.log

cp -f ./$OS-rti-dockerfile $BUILDROOT/docker/Dockerfile

# Create cccp.yaml for testing
cat << EOF > $BUILDROOT/docker/cccp.yaml
job-id: $OS-base
test-skip: true
EOF

cp /var/tmp/$OS-rti-docker.tar.xz $BUILDROOT/docker

cd $BUILDROOT/docker
podman build --tag $OS-rti .
cd -

fi

exit 0
